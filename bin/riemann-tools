#!/usr/bin/env ruby

require File.expand_path('../../lib/riemann/tools/base.rb', __FILE__)
require File.expand_path('../../lib/riemann/tools/docker.rb', __FILE__)
require File.expand_path('../../lib/riemann/tools/health.rb', __FILE__)
require File.expand_path('../../lib/riemann/tools/haproxy.rb', __FILE__)

class Launcher
  include Riemann::Tools
  
  require 'json'

  def init_plugins config
    plugins = []
    global_config = ''
    if config.has_key? "global"
      global_argv = config["global"]
    end
    @base = Riemann::Tools::Base.new(global_argv)
    config.each do |name, argv|
      unless name == "global"
        begin
          clazz = "Riemann::Tools::#{name.capitalize}".split('::').inject(Object) {|o,c| o.const_get c}
          plugin = clazz.new(global_argv +' '+ argv)
          plugins << plugin
        rescue => e
          $stderr.puts "No plugin named #{name} : #{e.class} #{e}\n#{e.backtrace.join "\n"}"
        end
      end
    end
    plugins
  end
  
  def start
    json_file = File.read(ARGV[0])
    config = JSON.parse(json_file)
    plugins = init_plugins config
    @base.run plugins
  end
end

Launcher.new.start